# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - name: Setup RCON connection
        run: |
          sudo apt-get install build-essential
          git clone https://github.com/Tiiffi/mcrcon.git
          cd mcrcon
          make
          sudo make install

      - name: Setup MinIO
        run: |
          wget https://dl.min.io/client/mc/release/linux-amd64/mc
          chmod +x mc
          sudo mv mc /usr/local/bin/

      - name: Set Up MinIO Configuration
        run: |
          mc alias set myminio https://mcapi.nikodaproot.pl/ "${{ secrets.MINIO_ACCESS_KEY }}" "${{ secrets.MINIO_SECRET_KEY }}"
          

            

      

      # Runs a single command using the runners shell
     # - name: Prepare the file
     #   run: zip -r -j -D test.zip pack/
      - name: Pack & Prepare file
        run: |
         cd pack
         zip -r ../nikosnextbots_pack.zip *
        







      


      - name: Upload to Host
        run: |
         mc cp nikosnextbots_pack.zip myminio/nnb/






# Testing

      - name: Get Changes
        id: get_changes
        run: |
          CHANGES=$(git log --pretty=format:"%h %s" ${{ github.event.before }}..${{ github.sha }})
          echo "::set-output name=changes::$CHANGES"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          body: |
            Changes in this release:
            ${{ steps.get_changes.outputs.changes }}

      - name: Upload Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./nikosnextbots_pack.zip
          asset_name: nikosnextbots_pack.zip
          asset_content_type: application/zip











         



      - name: Import Texturepack
        run: mcrcon -H ${{ secrets.RCON_IP }} -P ${{ secrets.RCON_PORT }} -p ${{ secrets.RCON_PASSWORD }} "forcepack reload"


          
          
