# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - name: Setup RCON connection
        run: |
          sudo apt-get install build-essential
          git clone https://github.com/Tiiffi/mcrcon.git
          cd mcrcon
          make
          sudo make install

          

            

      

      # Runs a single command using the runners shell
      - name: Prepare the file
        run: zip -r -j -D test.zip pack/
     # - name: Pack & Prepare file
     #   run: |
     #     mkdir temp_pack
     #     rsync -Rr pack/ temp_pack
     #     cd temp_pack
     #     find . -type f -execdir mv {} . \;
     #     zip -r test.zip *







      


      - name: Upload to Dropbox
        run: |
          curl -X POST https://content.dropboxapi.com/2/files/upload \
              --header "Authorization: Bearer ${{ secrets.DROPBOX_ACCESS_TOKEN }}" \
              --header "Content-Type: application/octet-stream" \
              --header "Dropbox-API-Arg: {\"path\": \"/test.zip\",\"mode\": \"overwrite\",\"autorename\": true,\"mute\": false}" \
              --data-binary @test.zip
        env:
          DROPBOX_ACCESS_TOKEN: ${{ secrets.DROPBOX_ACCESS_TOKEN }}



      - name: Import Texturepack
        run: mcrcon -H ${{ secrets.RCON_IP }} -P ${{ secrets.RCON_PORT }} -p ${{ secrets.RCON_PASSWORD }} "forcepack reload"


          
          
